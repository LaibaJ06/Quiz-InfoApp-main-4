<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>UIAppFonts</key>
	<array>
		<string>AlegreyaSans-Black.ttf</string>
		<string>ChelaOne-Regular.ttf</string>
		<string>BreeSerif-Regular.ttf</string>
		<string>AlegreyaSans-Regular.ttf
struct ContentView: View {
    @State private var painLevel: Double = 5.0

    var body: some View {
        ZStack {
            Rectangle()
                .foregroundColor(Color(hue: 0.958, saturation: 0.193, brightness: 0.986))
                .ignoresSafeArea()

            VStack {
                Spacer()

                Text(&quot;How are you feeling?&quot;)
                    .font(.custom(&quot;BreeSerif-Regular&quot;, size: 35))
                    .font(.title)
                    .foregroundColor(.black)

                Text(getEmoji(for: Int(painLevel)))
                    .font(.system(size: 50))
                    .padding()
                    .foregroundColor(.white)

                Slider(value: $painLevel, in: 1...10, step: 1)
                    .padding(.horizontal)
                    .accentColor(Color(#colorLiteral(red: 1, green: 0.4117647059, blue: 0.3803921569, alpha: 1))) // Pink slider color

                Text(&quot;Pain Level: \(Int(painLevel))&quot;)
                    .font(.custom(&quot;BreeSerif-Regular&quot;, size: 25))
                    .font(.headline)
                    .foregroundColor(.black)

                Spacer()
                
                // Display comforting messages based on pain level
                if (1...4).contains(Int(painLevel)) {
                    Text(&quot;Hang in there! You&apos;ll get through this.&quot;)
                        .font(.custom(&quot;BreeSerif-Regular&quot;, size: 20))
                        .foregroundColor(.black)
                        .padding()
                } else if (5...8).contains(Int(painLevel)) {
                    Text(&quot;Take it easy and rest. Things will get better.&quot;)
                        .font(.custom(&quot;BreeSerif-Regular&quot;, size: 20))
                        .foregroundColor(.black)
                        .padding()
                } else if (9...10).contains(Int(painLevel)) {
                    Text(&quot;I&apos;m so sorry you&apos;re feeling this way. Seek medical attention and take care.&quot;)
                        .font(.custom(&quot;BreeSerif-Regular&quot;, size: 20))
                        .foregroundColor(.black)
                        .padding()
                }
            }
            .padding()
        }
        .preferredColorScheme(.dark)
    }

    func getEmoji(for painLevel: Int) -&gt; String {
        switch painLevel {
        case 1...3:
            return &quot;üòê&quot;
        case 4...6:
            return &quot;üòï&quot;
        case 7...8:
            return &quot;üò£&quot;
        case 9...10:
            return &quot;üò´&quot;
        default:
            return &quot;üòê&quot;
        }
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
</string>
		<string>Sansita-Regular.ttf</string>
	</array>
</dict>
</plist>
